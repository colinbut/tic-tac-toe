{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","Component","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","xIsNext","stepNumber","slice","setState","concat","step","status","current","winner","moves","map","move","desc","key","Button","color","jumpTo","boardComplete","handleClick","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f3458a3.chunk.js","sourcesContent":["import React from 'react'\n\nconst Square = props => {\n    return (\n        <button className=\"square\" onClick={props.onClick}>\n            {props.value}\n        </button>\n    )\n}\n\nexport default Square","import React, { Component } from 'react'\nimport Square from './Square'\n\nclass Board extends Component {\n\n    renderSquare(i) {\n        return (\n            <Square \n                value={this.props.squares[i]}\n                onClick={() => this.props.onClick(i)}\n            />\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"board\">\n                <div className=\"board-row\">\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className=\"board-row\">\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        )\n    }\n}\nexport default Board","import React, { Fragment } from 'react'\nimport Board from './Board'\nimport Button from '@material-ui/core/Button'\nimport '../index.css'\n\nfunction boardComplete(squares) {\n    for (let i = 0; i < squares.length; i++) {\n        if (squares[i] === null) {\n            return false\n        }\n    }\n    return true\n}\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ]\n\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i]\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a]\n        }\n    }\n    return null\n}\n\nclass Game extends React.Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            history: [\n                {\n                    squares: Array(9).fill(null)\n                }\n            ],\n            xIsNext: true,\n            stepNumber: 0\n        }\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1)\n        const current = history[history.length - 1]\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O'\n        this.setState({\n            history: history.concat([{\n                squares: squares\n            }]),\n            xIsNext: !this.state.xIsNext,\n            stepNumber: history.length\n        })\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0\n        })\n    }\n\n    render() {\n        const history = this.state.history\n        const current = history[this.state.stepNumber]\n        const winner = calculateWinner(current.squares)\n\n        const moves = history.map((step, move) => {\n            const desc  = move ? 'Go to move #' + move : 'Go to game start'\n            return (\n                <li key={move}>\n                    <Button color=\"primary\" onClick={() => this.jumpTo(move)}>{desc}</Button>\n                </li>\n            )\n        })\n\n        let status\n        if (winner) {\n            status = \"Winner: \" + winner\n        } else {\n            if (boardComplete(current.squares)) {\n                status = \"It is a draw!\"\n            } else {\n                status = \"Next Player: \" + (this.state.xIsNext ? 'X' : 'O')\n            }\n        }\n        return (\n            <Fragment>\n            <header className=\"header\">\n                <h1>Tic Tac Toe</h1>\n            </header>\n            <div className=\"game\">\n                <div className=\"game-board\">\n                    <Board squares={current.squares} onClick={(i) => this.handleClick(i)}/>\n                </div>\n                <div className=\"game-info\">\n                    <div className=\"status\">{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n             </div>\n             <footer className=\"footer\">\n                 <h3>by Colin But</h3>\n             </footer>\n            </Fragment>\n        ) \n    }\n}\n\nexport default Game","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Game from './components/Game'\n\nReactDOM.render(<Game/>, document.getElementById('root'))"],"sourceRoot":""}